apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: spring-music
  name: spring-music
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: spring-music
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spring-music
        app.kubernetes.io/part-of: spring-music
    spec:
      containers:
      - image: <REGISTRY>/spring-music:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
        name: app
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
#IF(#persistenceType == 'jpa')
        # # environment for MySQL
        # env:
        #   - name: SPRING_PROFILES_ACTIVE
        #     value: mysql
        #   - name: SPRING_DATASOURCE_URL
        #     value: jdbc:mysql://music-mysql/mysql
        #   - name: SPRING_DATASOURCE_USERNAME
        #     value: root
        #   - name: SPRING_DATASOURCE_PASSWORD
        #     valueFrom:
        #       secretKeyRef:
        #         name: music-mysql
        #         key: mysql-root-password
        # # environment for PostgreSQL
        # env:
        #   - name: SPRING_PROFILES_ACTIVE
        #     value: postgres
        #   - name: SPRING_DATASOURCE_URL
        #     value: jdbc:postgresql://music-postgresql/postgres
        #   - name: SPRING_DATASOURCE_USERNAME
        #     value: postgres
        #   - name: SPRING_DATASOURCE_PASSWORD
        #     valueFrom:
        #       secretKeyRef:
        #         name: music-postgresql
        #         key: postgres-password
#ENDIF
#IF(#persistenceType == 'redis')
        env:
          - name: SPRING_DATA_REDIS_HOST
            value: music-redis-master
          - name: SPRING_DATA_REDIS_DATABASE
            value: "0"
          - name: SPRING_DATA_REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: music-redis
                key: redis-password
#ENDIF
#IF(#persistenceType == 'mongodb')
        env:
          - name: SPRING_DATA_MONGODB_HOST
            value: music-mongodb
          - name: SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE
            value: admin
          - name: SPRING_DATA_MONGODB_DATABASE
            value: local
          - name: SPRING_DATA_MONGODB_USERNAME
            value: root
          - name: SPRING_DATA_MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: music-mongodb
                key: mongodb-root-password
#ENDIF
      # imagePullSecrets:
      # - name: registry-credentials
